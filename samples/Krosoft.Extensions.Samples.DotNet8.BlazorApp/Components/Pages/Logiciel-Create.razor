@page "/Logiciels/Create" 
@using Krosoft.Extensions.Samples.DotNet8.BlazorApp.Models
@using Krosoft.Extensions.Samples.DotNet8.BlazorApp.Interfaces
@inject ILogicielsHttpService LogicielsStore
@implements IDisposable


@if (_lastSubmitResult != null)
{
    <h2>
        Last submit status: @_lastSubmitResult
    </h2>
}
<EditForm Model="@_logiciel" OnSubmit="@FormSubmitted" FormName="create">
    <DataAnnotationsValidator/>
    <div class="form-group">
        <label for="Name">Name</label>
        <InputText @bind-Value="_logiciel.Nom" class="form-control" id="Name"/>
        <ValidationMessage For="() => _logiciel.Nom"/>
    </div>

    <input type="submit" class="btn btn-primary" value="Save"/>
</EditForm>

@code {
    readonly Logiciel _logiciel = new Logiciel();
    private readonly CancellationTokenSource _cts = new CancellationTokenSource();

    public void Dispose()
    {
        _cts.Cancel();
        _cts.Dispose();
    }
    string? _lastSubmitResult;

    async Task FormSubmitted(EditContext editContext)
    {
        var formIsValid = editContext.Validate();
        _lastSubmitResult =
            formIsValid
                ? "Success - form was valid"
                : "Failure - form was invalid";

        
        var result = await LogicielsStore.CreateAsync(_logiciel, _cts.Token);
    }

}